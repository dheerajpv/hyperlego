// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Division {
  JA
  JQA
}

enum MatchType {
  PRACTICE
  QUALIFICATION
}

enum MatchStatus {
  PLAYED
  PLAYING
  UNPLAYED
}

// Should be 1A, 1B, etc - but first char must be a letter
enum Table {
  A1
  A2
  B1
  B2
}

// #region Year-specific enums

enum ElevatorState {
  NEITHER
  BLUE_CAR_DOWN
  BALANCED
}

enum CirclePosition {
  OUTSIDE
  PARTIAL
  COMPLETE
}

// #endregion

model Match {
  id     Int         @id
  time   DateTime
  type   MatchType   @default(QUALIFICATION)
  round  Int
  status MatchStatus
  scores Score[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Score {
  id    Int   @id @default(autoincrement())
  table Table
  total Int

  // #region Year-specific score items
  // M01 Elevated Places
  supportedByBrige Boolean
  numFlags         Int

  // M02 Crane
  blueLowered     Boolean
  blueIndependent Boolean
  blueInCircle    Boolean

  // M03 Inspection Drone
  droneSupported Boolean

  // M04 Design For Wildlife
  batSupported Boolean

  // M05 Treehouse
  supportedByLargeBranches Int
  supportedBySmallBranches Int

  // M06 Traffic Jam
  jamLifted Boolean

  // M07 Swing
  swingReleased Boolean

  // M08 Elevator
  elevatorState ElevatorState

  // M09 Safety Factor
  testBuildingIndependent Boolean

  // M10 Steel Construction
  steelIndependent Boolean
  beamsKnockedOut  Int

  // M11 Innovative Architecture
  unitValidSize Boolean
  inCircle      CirclePosition

  // M12 Design & Build
  matchingCircles Int
  heightSum       Int

  // M13 Sustainability Upgrades
  sustainabilityUpgrades Int

  // M14 Precision
  precisionTokens Int
  // #endregion

  match   Match @relation(fields: [matchId], references: [id])
  matchId Int

  team   Team @relation(fields: [teamId], references: [id])
  teamId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id       Int      @id
  name     String
  division Division
  school   String
  scores   Score[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
